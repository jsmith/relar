name: Deploy

on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

# TODO refactor
jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: c-hive/gha-npm-cache@v1
      # We *need* to hoist our dependencies due to symlinks
      - run: npm install --no-package-lock
      - run: npm run bootstrap
      - run: npx patch-package

      - id: changes
        uses: jsmith/changes-since-last-tag@v0.3.2
        env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" }
        with:
          glob: packages/app/**,packages/functions/**,packages/firestore.rules,packages/storage.rules,packages/storage.json,packages/indexes.json,packages/shared/**

      - if: steps.changes.outputs.any_changed == 'true'
        run: npm install -g firebase-tools

      # FIREBASE_TOKEN generated using firebase login:ci
      # See https://firebase.google.com/docs/cli#cli-ci-systems
      - if: contains(steps.changes.outputs.files, 'packages/functions/') || contains(steps.changes.outputs.files, 'packages/shared/')
        run: |
          npm run build
          firebase deploy --only functions --project production
        env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }
        working-directory: packages/functions

      - if: contains(steps.changes.outputs.files, 'packages/app/') || contains(steps.changes.outputs.files, 'packages/shared/')
        run: |
          npm run build
          firebase deploy --only hosting --project production
        env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }
        working-directory: packages/app

      - if: contains(steps.changes.outputs.files, 'packages/firestore.rules') || contains(steps.changes.outputs.files, 'packages/indexes.json')
        run: firebase deploy --only firestore --project production
        env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }
        working-directory: packages

      - if: contains(steps.changes.outputs.files, 'packages/storage.rules') || contains(steps.changes.outputs.files, 'packages/storage.json')
        run: firebase deploy --only storage --project production
        env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }
        working-directory: packages

      - if: steps.android_changes.outputs.any_changed == 'true'
        run: |
          npm run build
          firebase deploy --only hosting --project production
        env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }
        working-directory: packages/mobile

  deploy_mobile:
    # Make this separate since it has to use macOS which costs 10x as much as ubuntu
    runs-on: macOS-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: c-hive/gha-npm-cache@v1
      - run: npm install --no-package-lock
      # We *need* to hoist our dependencies due to symlinks
      - run: npm run bootstrap
      - run: npx patch-package

      - id: changes
        uses: jsmith/changes-since-last-tag@v0.3.2
        env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" }
        with: { glob: "packages/mobile/**,packages/shared/**" }

      # We *need* to hoist our dependencies due to symlinks
      - if: steps.changes.outputs.any_changed == 'true'
        run: npm run bootstrap
      - if: steps.changes.outputs.any_changed == 'true'
        run: npx patch-package

      - if: steps.changes.outputs.any_changed == 'true'
        uses: actions/setup-ruby@v1

      - if: steps.changes.outputs.any_changed == 'true'
        working-directory: packages/mobile
        # Install the same version of bundler that I used
        # or else bundle install fails...
        run: |
          gem install bundler:1.17.2
          bundle install

      - if: steps.changes.outputs.any_changed == 'true'
        working-directory: packages/mobile
        run: |
          npm run build
          npx cap sync ios
          npx cap sync android

      - if: steps.changes.outputs.any_changed == 'true'
        run: fastlane beta
        working-directory: packages/mobile/ios/App
        env:
          {
            GITHUB_TOKEN: "${{ secrets.PERSONAL_GIT_ACCESS_TOKEN }}",
            GITHUB_USERNAME: jsmith,
            FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}",
          }

      - if: steps.changes.outputs.any_changed == 'true'
        run: fastlane beta
        working-directory: packages/mobile/android
        env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }
