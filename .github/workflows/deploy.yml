name: Deploy

on: [push]
# on:
#   push:
#     tags:
#       - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: c-hive/gha-npm-cache@v1
      - run: make install-ci
      - run: npx patch-package
      - run: npx patch-package
        working-directory: app
      - run: npm run build
        working-directory: native-audio
      - run: npm run build
        working-directory: function
      - run: npm run build:web-production
        working-directory: app

      # - id: changes
      #   uses: jsmith/changes-since-last-tag@v0.3.2
      #   env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" }
      #   with:
      #     glob: app/**,functions/**,firestore.rules,storage.rules,storage.json,indexes.json,shared/**

      # - if: steps.changes.outputs.any_changed == 'true'
      - run: npm install --no-save firebase-tools
      - run: firebase deploy --project production

      # FIREBASE_TOKEN generated using firebase login:ci
      # See https://firebase.google.com/docs/cli#cli-ci-systems
      # - if: contains(steps.changes.outputs.files, 'functions/') || contains(steps.changes.outputs.files, 'shared/')
      # - run: |
      #     npm run build
      #     firebase deploy --only functions --project production
      #   env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }
      #   working-directory: functions

      # - if: contains(steps.changes.outputs.files, 'app/') || contains(steps.changes.outputs.files, 'shared/')
      # - run: |
      #     npm run build
      #     firebase deploy --only hosting --project production
      #   env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }
      #   working-directory: app

      # - if: contains(steps.changes.outputs.files, 'firestore.rules') || contains(steps.changes.outputs.files, 'indexes.json')
      # - run: firebase deploy --only firestore --project production
      #   env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }

      # - if: contains(steps.changes.outputs.files, 'storage.rules') || contains(steps.changes.outputs.files, 'storage.json')
      # - run: firebase deploy --only storage --project production
      #   env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }

  # deploy_mobile:
  #   # Make this separate since it has to use macOS which costs 10x as much as ubuntu
  #   runs-on: macOS-latest
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v1
  #     - uses: c-hive/gha-npm-cache@v1
  #     - run: npm install --no-package-lock
  #     # We *need* to hoist our dependencies due to symlinks
  #     - run: npm run bootstrap
  #     - run: npx patch-package

  #     - id: changes
  #       uses: jsmith/changes-since-last-tag@v0.3.2
  #       env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" }
  #       with: { glob: "mobile/**,shared/**" }

  #     # We *need* to hoist our dependencies due to symlinks
  #     - if: steps.changes.outputs.any_changed == 'true'
  #       run: npm run bootstrap
  #     - if: steps.changes.outputs.any_changed == 'true'
  #       run: npx patch-package

  #     - if: steps.changes.outputs.any_changed == 'true'
  #       uses: actions/setup-ruby@v1

  #     - if: steps.changes.outputs.any_changed == 'true'
  #       working-directory: mobile
  #       # Install the same version of bundler that I used
  #       # or else bundle install fails...
  #       run: |
  #         gem install bundler:1.17.2
  #         bundle install

  #     - if: steps.changes.outputs.any_changed == 'true'
  #       working-directory: mobile
  #       run: |
  #         npm run build
  #         npx cap sync ios
  #         npx cap sync android

  #     - if: steps.changes.outputs.any_changed == 'true'
  #       run: fastlane beta
  #       working-directory: mobile/ios/App
  #       env:
  #         {
  #           GITHUB_TOKEN: "${{ secrets.PERSONAL_GIT_ACCESS_TOKEN }}",
  #           GITHUB_USERNAME: jsmith,
  #           FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}",
  #         }

  #     - if: steps.changes.outputs.any_changed == 'true'
  #       run: fastlane beta
  #       working-directory: mobile/android
  #       env: { FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}" }
